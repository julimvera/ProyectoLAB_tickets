@{
    ViewData["Title"] = "Todos los tickets";
}

@model IEnumerable<WebApp_Tickets.Models.Ticket>

@* mensaje toast de exito *@
@if (TempData["SuccessMessage"] != null)
{
    <div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1050;">
        <div class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body">
                    @TempData["SuccessMessage"]
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var toastElement = document.querySelector('.toast');
            var toast = new bootstrap.Toast(toastElement);
            toast.show();
        });
    </script>
}

@* mensaje toast de error *@
@if (TempData["ErrorMessage"] != null)
{
    <div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 1050;">
        <div class="toast align-items-center text-white bg-danger border-0" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body">
                    @TempData["ErrorMessage"]
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var toastElement = document.querySelector('.toast.bg-danger');
            var toast = new bootstrap.Toast(toastElement);
            toast.show();
        });
    </script>
}
<h2 class="mb-4">Todos los tickets</h2>

<div class="mb-3">
    <!-- Botón para crear un nuevo ticket -->
    <a href="@Url.Action("Create", "Tickets")" class="btn btn-primary">Crear Nuevo Ticket</a>
</div>


<p>Selecciona un ticket para ver detalles o realizar acciones adicionales.</p>


@* form de busqueda *@
<form method="get" class="mb-4 text-end">
    <div class="form-row d-inline-block">
        <div class="form-group col-md-5">
            <input type="text" name="nombre" value="@ViewData["nombre"]" class="form-control" placeholder="Buscar por nombre" style="width: 200px;" />
        </div>
        <div class="form-group col-md-5">
            <input type="text" name="apellido" value="@ViewData["apellido"]" class="form-control" placeholder="Buscar por apellido" style="width: 200px;" />
        </div>
        <div class="form-group col-md-2">
            <button type="submit" class="btn btn-primary btn-block">Buscar</button>
        </div>
    </div>
</form>

@* tabla de tickets *@
<table class="table table-striped table-bordered mt-3">
    <thead class="table-dark">
        <tr>
            <th>ID</th>
            <th>Fecha de Solicitud</th>
            <th>Afiliado</th>
            <th>Estado</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var ticket in Model)
        {
            <tr>
                <td>@ticket.Id</td>
                <td>@ticket.FechaSolicitud.ToString("dd/MM/yyyy")</td>
                <td>@ticket.Afiliado.Apellido </td>
                <td>@ticket.Estado.Descripcion</td>
                <td>
                 
                    <a href="@Url.Action("Details", "Tickets", new { id = ticket.Id })" class="btn btn-info btn-sm">Ver detalles</a>

                    
                    <a href="@Url.Action("Edit", "Tickets", new { id = ticket.Id })" class="btn btn-primary">Editar</a>

                    
                    <a href="@Url.Action("Delete", "Tickets", new { id = ticket.Id })" class="btn btn-danger">Eliminar</a>
                </td>
            </tr>
        }
    </tbody>
</table>


@* controles de paginacion *@
<section class="mt-5">
    @if (ViewData["CurrentPage"] != null && ViewData["TotalPages"] != null)
    {
        var currentPage = (int)ViewData["CurrentPage"];
        var totalPages = (int)ViewData["TotalPages"];

        <nav aria-label="Paginación">
            <ul class="pagination justify-content-center">
                @if (currentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-page="@(currentPage - 1)">Anterior</a>
                    </li>
                }

                @for (var i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(currentPage == i ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                    </li>
                }

                @if (currentPage < totalPages)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-page="@(currentPage + 1)">Siguiente</a>
                    </li>
                }
            </ul>
        </nav>
    }
</section>


<style>
  
    .table {
        border: 1px solid #dee2e6;
    }

    .text-end {
        text-align: right;
    }
</style>
